{"version":3,"sources":["components/App/App.js","reportWebVitals.js","index.js"],"names":["App","useState","user_id","name","email","user","trackClick","e","target","window","analytics","track","button_clicked","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+JAoCeA,EAlCH,WAEV,MAAwBC,mBAAS,CAC/BC,QAAS,EACTC,KAAM,QACNC,MAAO,qBAHT,mBAAOC,EAAP,KAUMC,GAVN,KAUmB,SAACC,GAClB,IAAQJ,EAASI,EAAEC,OAAXL,KACK,SAATA,GACFM,OAAOC,UAAUC,MAAM,oBAAqB,CAC1CR,KAAME,EAAKF,OAGfM,OAAOC,UAAUC,MAAM,oBAAqB,CAC1CC,eAAgBT,MAIpB,OACE,iCACE,kDACA,wBAAQA,KAAK,QAAQU,QAAS,SAAAN,GAAC,OAAID,EAAWC,IAA9C,yBACA,wBAAQJ,KAAK,SAASU,QAAS,SAAAN,GAAC,OAAID,EAAWC,IAA/C,0BACA,wBAAQJ,KAAK,OAAOU,QAAS,SAAAN,GAAC,OAAID,EAAWC,IAA7C,2BCnBSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.308dcb9c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst App = () => {\n\n  const [user, setUser] = useState({\n    user_id: 1,\n    name: 'Bobby',\n    email: 'bobby@twilio.com'\n  })\n\n  // const showUser = () => {\n  //   alert(user.name)\n  // }\n\n  const trackClick = (e) => {\n    const { name } = e.target\n    if (name === 'user') {\n      window.analytics.track('User Button Click', {\n        name: user.name\n      });  \n    }\n    window.analytics.track('Test Button Click', {\n      button_clicked: name\n    });\n  }\n\n  return (\n    <main>\n      <h1>Segment Test App</h1>\n      <button name='first' onClick={e => trackClick(e)}>First Track</button>\n      <button name='second' onClick={e => trackClick(e)}>Second Track</button>\n      <button name='user' onClick={e => trackClick(e)}>User info</button>\n    </main>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}